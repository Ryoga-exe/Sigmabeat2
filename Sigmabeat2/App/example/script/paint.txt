
void Main()
{
	Scene::SetBackground(ColorF(0.7, 0.9, 0.7));
	Image image(600, 600, Palette::White);
	DynamicTexture texture(image);

	Array<Color> colors;
	for (int32 i = 0; i < 12; ++i)
	{
		colors << HSV(i * 30, 0.95, 0.95);
	}
	colors << Color(255) << Color(160) << Color(80) << Color(0);

	const Array<Texture> icons =
	{
		Texture(Icon(0xf1fc, 36)),
		Texture(Icon(0xf576, 36))
	};
	const Texture saveIcon(Icon(0xf0c7, 48));

	size_t colorIndex = 0;
	size_t mode = 0;

	while (System::Update())
	{
		const Color penColor = colors[colorIndex];

		if (mode == 0)
		{
			if (MouseL.pressed() && Scene::DeltaTime() < 0.1)
			{
				Line(Cursor::PreviousPos(), Cursor::Pos())
					.overwrite(image, 8, penColor, false);
				texture.fill(image);
			}
		}
		else
		{
			if (MouseL.down())
			{
				image.floodFill(Cursor::Pos(), penColor);
				texture.fill(image);
			}
		}

		texture.draw();

		for (size_t i = 0; i < colors.size(); ++i)
		{
			if (Rect(i % 4 * 40, i / 4 * 40, 40)
				.stretched(-3)
				.movedBy(620, 20)
				.draw(colors[i])
				.drawFrame(colorIndex == i ? 8 : 0, 3, ColorF(0.7))
				.leftClicked())
			{
				colorIndex = i;
			}
		}

		for (size_t i = 0; i < icons.size(); ++i)
		{
			if (Rect(620 + i * 90, 200, 70)
				.rounded(20)
				.drawFrame(mode == i ? 8 : 1)
				.leftClicked())
			{
				mode = i;
			}

			icons[i].drawAt(655 + i * 90, 235,
				mode == i ? penColor : Color(0, 40));
		}

		const Rect saveButton(620, 290, 160, 70);

		if (saveButton.rounded(20).draw().leftClicked())
		{
			image.saveWithDialog();
		}

		saveIcon.drawAt(saveButton.center(), ColorF(0.25));

		if (Rect(600).mouseOver())
		{
			Cursor::RequestStyle(CursorStyle::Hidden);

			if (mode == 0)
			{
				Circle(Cursor::Pos(), 4).draw(penColor);
			}
			else
			{
				icons[1].draw(Cursor::Pos().movedBy(-30, -30), Palette::Black);
			}
		}
	}
}
